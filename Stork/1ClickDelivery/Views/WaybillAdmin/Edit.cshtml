@model _1ClickDelivery.Models.Waybill

@{
    ViewBag.Title = "Edit";
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container" style="margin-top:200px; margin-left:40px; margin-right:40px; margin-bottom:200px">
        <div class="row">
            <h2>Edit</h2>
            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.PKWayBill)
            <div class="col-xs-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.ManualWayBillNo, htmlAttributes: new { @class = "control-label col-xs-12" })
                    <div class="col-md-7">
                        @Html.EditorFor(model => model.ManualWayBillNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ManualWayBillNo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-xs-2">
                        <input type="submit" value="Save" class="btn btn-primary" />

                    </div>
                </div>
            </div>
            

            @*<div class="form-group">
            @Html.LabelFor(model => model.WayBillNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WayBillNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WayBillNo, "", new { @class = "text-danger" })
            </div>
        </div>*@

            @*<div class="form-group">
            @Html.LabelFor(model => model.SenderName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SenderName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SenderName, "", new { @class = "text-danger" })
            </div>
        </div>*@

            @*<div class="form-group">
            @Html.LabelFor(model => model.PickupAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PickupAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PickupAddress, "", new { @class = "text-danger" })
            </div>
        </div>*@

            @*<div class="form-group">
            @Html.LabelFor(model => model.SpecialInstruction, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SpecialInstruction, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SpecialInstruction, "", new { @class = "text-danger" })
            </div>
        </div>*@

            @*<div class="form-group">
            @Html.LabelFor(model => model.DestinationAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DestinationAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DestinationAddress, "", new { @class = "text-danger" })
            </div>
        </div>*@

            @*<div class="form-group">
            @Html.LabelFor(model => model.ReceiverName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReceiverName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReceiverName, "", new { @class = "text-danger" })
            </div>
        </div>*@

            @*<div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>*@

            @*<div class="form-group">
            @Html.LabelFor(model => model.DateOfPickup, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfPickup, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfPickup, "", new { @class = "text-danger" })
            </div>
        </div>*@

            @*<div class="form-group">
            @Html.LabelFor(model => model.DateTimeCreated, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateTimeCreated, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateTimeCreated, "", new { @class = "text-danger" })
            </div>
        </div>*@

            @*<div class="form-group">
            @Html.LabelFor(model => model.DateTimeUpdated, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateTimeUpdated, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateTimeUpdated, "", new { @class = "text-danger" })
            </div>
        </div>*@

            
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        $("footer").remove();
        removeEffectOnNavbar();
        $("#navbarCollapse li:nth-child(4)").addClass("active");

    </script>

}